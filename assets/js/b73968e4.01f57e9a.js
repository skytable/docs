"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3281],{5440:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var r=o(5893),s=o(1151);const t={id:"migration",title:"Migrating from an older release"},i=void 0,l={id:"resources/migration",title:"Migrating from an older release",description:"Firstly, thank you patron! You're a part of an exclusive club which has seen Skytable take shape from just another key-value",source:"@site/docs/resources/2.migration.md",sourceDirName:"resources",slug:"/resources/migration",permalink:"/resources/migration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"migration",title:"Migrating from an older release"},sidebar:"docs",previous:{title:"Resources",permalink:"/resources/overview"},next:{title:"Skyhash 2 \u2014 Protocol Overview",permalink:"/protocol/overview"}},c={},a=[{value:"From actions to BlueQL",id:"from-actions-to-blueql",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Firstly, thank you patron! You're a part of an exclusive ",(0,r.jsx)(n.em,{children:"club"})," which has seen Skytable take shape from ",(0,r.jsx)(n.em,{children:"just another key-value"}),"\nstore into a powerful database and we couldn't be more honored to be a choice in your stack. This document is meant for people\ncoming from version prior to Skytable Octave (0.8)."]}),"\n",(0,r.jsx)(n.p,{children:"Let's get you up to speed with the new semantics:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Keyspaces are now spaces"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tables are now models"})," and can store multiple fields"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Nested lists are now supported"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"All the actions are gone!"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["There is no ",(0,r.jsx)(n.code,{children:"default:default"})," keyspace and model"]}),": You will need to create your own ",(0,r.jsx)(n.code,{children:"space"})," and ",(0,r.jsx)(n.code,{children:"model"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"from-actions-to-blueql",children:"From actions to BlueQL"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SET x y"})," becomes: ",(0,r.jsx)(n.code,{children:"INSERT INTO mymodel(x, ?)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET x"})," becomes ",(0,r.jsx)(n.code,{children:"SELECT * FROM mymodel WHERE <primary_key> = x"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UPDATE x y"})," becomes ",(0,r.jsx)(n.code,{children:"UPDATE mymodel SET field_name = ? WHERE <primary_key> = x"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DEL X"})," becomes ",(0,r.jsx)(n.code,{children:"DELETE FROM mymodel WHERE <primary_key> = x"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Essentially, you no longer have the key/value semantics but a more SQL-like interface for querying with BlueQL. You can continue\nto use lists (create, update) but individual element access is currently limited. See ",(0,r.jsx)(n.a,{href:"limits",children:"this page for more information"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>l,a:()=>i});var r=o(7294);const s={},t=r.createContext(s);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);