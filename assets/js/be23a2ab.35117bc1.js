"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6209],{9040:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var l=s(4848),r=s(8453);const i={id:"dml",title:"DML"},a=void 0,d={id:"blueql/dml",title:"DML",description:"DML or Data Manipulation Language is what you'll be using for the most of your queries once you finish defining your data model. DML enables you to insert rows, manipulate the data in them, access their data or delete them.",source:"@site/docs/blueql/3.dml.md",sourceDirName:"blueql",slug:"/blueql/dml",permalink:"/blueql/dml",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"dml",title:"DML"},sidebar:"docs",previous:{title:"DDL",permalink:"/blueql/ddl"},next:{title:"DCL",permalink:"/blueql/dcl"}},t={},o=[{value:"INSERT",id:"insert",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Requirements and responses",id:"requirements-and-responses",level:3},{value:"Examples",id:"examples",level:3},{value:"SELECT",id:"select",level:2},{value:"Syntax",id:"syntax-1",level:3},{value:"Requirements and responses",id:"requirements-and-responses-1",level:3},{value:"Examples",id:"examples-1",level:3},{value:"UPDATE",id:"update",level:2},{value:"Syntax",id:"syntax-2",level:3},{value:"Requirements and responses",id:"requirements-and-responses-2",level:3},{value:"Examples",id:"examples-2",level:3},{value:"DELETE",id:"delete",level:2},{value:"Syntax",id:"syntax-3",level:3},{value:"Requirements and responses",id:"requirements-and-responses-3",level:3},{value:"Examples",id:"examples-3",level:3}];function c(e){const n={admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"DML or Data Manipulation Language is what you'll be using for the most of your queries once you finish defining your data model. DML enables you to insert rows, manipulate the data in them, access their data or delete them."}),"\n",(0,l.jsx)(n.admonition,{title:"Indexes and performance",type:"tip",children:(0,l.jsx)(n.p,{children:"NB: Due to performance, at this point only the primary index (aka the primary key column) can be used to run DML queries. This\nrestriction will be eased in upcoming relases."})}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsx)(n.p,{children:"As you've already been told, don't forget to parameterize. The examples directly use literals to make it easier for you to understand!"})}),"\n",(0,l.jsx)(n.h2,{id:"insert",children:"INSERT"}),"\n",(0,l.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- insert in declaration order\nINSERT INTO <model_name>(?, ?, ?, ...)\n-- insert using field names\nINSERT INTO <model_name> {\n    field1_name: ?,\n    field2_name: ?,\n    ...\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"requirements-and-responses",children:"Requirements and responses"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": any"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": empty or error"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"INSERT INTO mymodel('sayan', true)\nINSERT INTO mymodel {\n    username: 'sayan',\n    verified: true,\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"select",children:"SELECT"}),"\n",(0,l.jsx)(n.h3,{id:"syntax-1",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- select wildcard\nSELECT * FROM <model_name> WHERE <primary_key_field> = <expression>\n-- select specific columns\nSELECT profile_pic, phone_num FROM <model_name> WHERE <primary_key_field> = <expression>\n-- select several records (wildcard)\nSELECT ALL * FROM <model_name> LIMIT <limit>\n-- select several records (named columns)\nSELECT ALL username FROM <model_name> LIMIT 100\n"})}),"\n",(0,l.jsx)(n.h3,{id:"requirements-and-responses-1",children:"Requirements and responses"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": any"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Operational notes"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Unlike SQL"}),", a standard ",(0,l.jsx)(n.code,{children:"SELECT"})," in BlueQL is a ",(0,l.jsx)(n.strong,{children:"point query"})," and hence can only access a single row"]}),"\n",(0,l.jsx)(n.li,{children:"This means that if the row does not match an error is raised"}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"To select multiple rows"}),": you need to use ",(0,l.jsx)(n.code,{children:"SELECT ALL"}),". This ",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"must"})})," be accompanied by a ",(0,l.jsx)(n.code,{children:"LIMIT"})," clause."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": any"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": row or error"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"examples-1",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM apps.socialapp WHERE username = 'sayan'\nSELECT password, profile_url FROM apps.logins WHERE username = 'sayan'\n"})}),"\n",(0,l.jsx)(n.h2,{id:"update",children:"UPDATE"}),"\n",(0,l.jsx)(n.h3,{id:"syntax-2",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"UPDATE <model_name> SET <field_name> <operator> <updated_field_value>, ... WHERE <primary_key_field> = <expression>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"requirements-and-responses-2",children:"Requirements and responses"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": any"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Operational notes"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Unlike SQL"}),", a standard ",(0,l.jsx)(n.code,{children:"UPDATE"})," in BlueQL is a ",(0,l.jsx)(n.strong,{children:"point query"})," and hence can only mutate a single row"]}),"\n",(0,l.jsxs)(n.li,{children:["Wildcard queries aren't yet permitted. ",(0,l.jsx)(n.strong,{children:"NB: This will be fixed very soon!"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": any"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": row or error"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"examples-2",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"UPDATE apps.socialapp SET followers += 1 WHERE username = 'sayan'\nUPDATE apps.socialapp SET followers += 200, following += 5 WHERE username = 'sayan'\n"})}),"\n",(0,l.jsx)(n.h2,{id:"delete",children:"DELETE"}),"\n",(0,l.jsx)(n.h3,{id:"syntax-3",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"DELETE FROM <model_name> WHERE <primary_key_field> = <expression>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"requirements-and-responses-3",children:"Requirements and responses"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": any"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Operational notes"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Unlike SQL"}),", a standard ",(0,l.jsx)(n.code,{children:"DELETE"})," in BlueQL is a ",(0,l.jsx)(n.strong,{children:"point query"})," and hence can only remove a single row"]}),"\n",(0,l.jsx)(n.li,{children:"This means that if the row does not match an error is raised"}),"\n",(0,l.jsxs)(n.li,{children:["Wildcard queries aren't yet permitted. ",(0,l.jsx)(n.strong,{children:"NB: This will be fixed very soon!"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": any"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": row or error"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"examples-3",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"DELETE FROM apps.socialapp WHERE username = 'aboslutely mid user'\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var l=s(6540);const r={},i=l.createContext(r);function a(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);