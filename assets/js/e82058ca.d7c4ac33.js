"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2893],{5794:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var l=s(4848),r=s(8453);const i={id:"ddl",title:"DDL"},d=void 0,c={id:"blueql/ddl",title:"DDL",description:"DDL short for Data Definition Language is used to create, alter and drop DDL objects such as spaces and models.",source:"@site/docs/blueql/2.ddl.md",sourceDirName:"blueql",slug:"/blueql/ddl",permalink:"/blueql/ddl",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"ddl",title:"DDL"},sidebar:"docs",previous:{title:"Overview",permalink:"/blueql/overview"},next:{title:"DML",permalink:"/blueql/dml"}},t={},o=[{value:"Generic",id:"generic",level:2},{value:"USE",id:"use",level:3},{value:"INSPECT:",id:"inspect",level:3},{value:"Space",id:"space",level:2},{value:"CREATE SPACE",id:"create-space",level:3},{value:"Examples",id:"examples",level:4},{value:"ALTER SPACE",id:"alter-space",level:3},{value:"Examples",id:"examples-1",level:4},{value:"DROP SPACE",id:"drop-space",level:3},{value:"Examples",id:"examples-2",level:4},{value:"Models",id:"models",level:2},{value:"Type definitions",id:"type-definitions",level:3},{value:"CREATE MODEL",id:"create-model",level:3},{value:"Examples",id:"examples-3",level:4},{value:"ALTER MODEL ADD",id:"alter-model-add",level:3},{value:"Examples",id:"examples-4",level:4},{value:"ALTER MODEL UPDATE",id:"alter-model-update",level:3},{value:"Examples",id:"examples-5",level:4},{value:"ALTER MODEL REMOVE",id:"alter-model-remove",level:3},{value:"Examples",id:"examples-6",level:4},{value:"DROP MODEL",id:"drop-model",level:3},{value:"Examples",id:"examples-7",level:4}];function a(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["DDL short for Data Definition Language is used to create, alter and drop DDL objects such as ",(0,l.jsx)(n.code,{children:"space"}),"s and ",(0,l.jsx)(n.code,{children:"model"}),"s."]}),"\n",(0,l.jsx)(n.h2,{id:"generic",children:"Generic"}),"\n",(0,l.jsx)(n.h3,{id:"use",children:"USE"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"USE <space>"}),": sets the space that will be used for all other queries"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"USE null"}),": unsets the space"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"USE $current"}),": returns the name of the space currently set ",(0,l.jsx)(n.strong,{children:"if it still exists"})," or otherwise returns an error"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": any"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": empty or error"]}),"\n"]}),"\n",(0,l.jsxs)(n.admonition,{type:"tip",children:[(0,l.jsxs)(n.mdxAdmonitionTitle,{children:["DDL actions don't respect ",(0,l.jsx)(n.code,{children:"USE"})]}),(0,l.jsx)(n.p,{children:"This is so that you're specific about what DDL object you want to manipulate."}),(0,l.jsxs)(n.p,{children:["Exception: ",(0,l.jsx)(n.code,{children:"INSPECT"})," queries will respect the currently set ",(0,l.jsx)(n.code,{children:"SPACE"})," if required."]})]}),"\n",(0,l.jsx)(n.h3,{id:"inspect",children:"INSPECT:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"INSPECT GLOBAL"}),": returns a JSON with a list of all spaces, users and other information. For example:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{"spaces":["space1"],"users":["root"],"settings":{}}\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"INSPECT SPACE <space>"}),": returns a JSON with a list of all models in the space and other information, For example:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{"models":["model1"],"properties":{}}\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"INSPECT MODEL <space>.<model>"}),": returns a JSON with information about the model such as the declaration, row count and such:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{"decl":"{*username: string, !password: string, ?notes: [string]}","size":12345678,"properties":{}}\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": any"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": string or error"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"space",children:"Space"}),"\n",(0,l.jsx)(n.h3,{id:"create-space",children:"CREATE SPACE"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- without any properties\nCREATE SPACE [IF NOT EXISTS] <space_name>\n-- with properties\nCREATE SPACE [IF NOT EXISTS] <space_name> WITH { property_name: property_value }\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": ",(0,l.jsx)(n.code,{children:"root"})," only"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Properties"}),": None"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"empty or error"}),"\n",(0,l.jsxs)(n.li,{children:["when used with ",(0,l.jsx)(n.code,{children:"if not exists"}),": bool indicating whether the space was actually created or not (false indicates that it was already present and hence not created)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"CREATE SPACE apps\nCREATE SPACE IF NOT EXISTS apps\n"})}),"\n",(0,l.jsx)(n.h3,{id:"alter-space",children:"ALTER SPACE"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"ALTER SPACE <space_name> WITH { property_name: property_value }\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": ",(0,l.jsx)(n.code,{children:"root"})," only"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Properties"}),": None"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": empty or error"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"examples-1",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"ALTER SPACE apps WITH { new_cache_value: 1234 }\n"})}),"\n",(0,l.jsx)(n.h3,{id:"drop-space",children:"DROP SPACE"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"DROP SPACE [IF EXISTS] [ALLOW NOT EMPTY] <space_name>\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": ",(0,l.jsx)(n.code,{children:"root"})," only"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Operational notes"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"A non-empty space cannot be dropped"}),"\nTo avoid catastrophic ",(0,l.jsx)(n.code,{children:"DROP"}),"s, a ",(0,l.jsx)(n.code,{children:"SPACE"})," can only be dropped directly if it is non-empty. To drop a non-empty space, you must\nrun:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"DROP SPACE ALLOW NOT EMPTY <space_name>\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"empty or error"}),"\n",(0,l.jsxs)(n.li,{children:["when used with ",(0,l.jsx)(n.code,{children:"if exists"}),": bool indicating whether the space was actually present or not"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"examples-2",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"DROP SPACE myspace\nDROP SPACE ALLOW NOT EMPTY myspace\n"})}),"\n",(0,l.jsx)(n.h2,{id:"models",children:"Models"}),"\n",(0,l.jsx)(n.h3,{id:"type-definitions",children:"Type definitions"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"When used in create"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"A simple type"}),": ",(0,l.jsx)(n.code,{children:"field_name: string"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"A list"}),": ",(0,l.jsx)(n.code,{children:"field_name: list {type: string}"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"A nested list"}),": ",(0,l.jsx)(n.code,{children:"field_name: list{type: string}"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"When used in alter"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"A simple type"}),": ",(0,l.jsx)(n.code,{children:"field_name { type: string }"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"A list"}),": ",(0,l.jsx)(n.code,{children:"field_name { type: list {type: string} }"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"A nested list"}),": ",(0,l.jsx)(n.code,{children:"field_name {type: list{type:list{type:string}}}"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"create-model",children:"CREATE MODEL"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"CREATE MODEL [IF NOT EXISTS] <space_name>.<model_name>([primary] [null] field_name: field_type) [ WITH {property_name: property_value} ]\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": ",(0,l.jsx)(n.code,{children:"root"})," only"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Properties"}),": None"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Operational notes"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["The ",(0,l.jsx)(n.strong,{children:"first field specified automatically becomes the primary key"})]}),"\n",(0,l.jsxs)(n.li,{children:["All ",(0,l.jsx)(n.strong,{children:"fields are not nullable by default"})]}),"\n",(0,l.jsxs)(n.li,{children:["To make a field nullable add the ",(0,l.jsx)(n.code,{children:"null"})," keyword before the field name"]}),"\n",(0,l.jsxs)(n.li,{children:["If you do not want the first field to become the primary key, then you must add the ",(0,l.jsx)(n.code,{children:"primary"})," keyword before the field that you want to use as the primary key"]}),"\n",(0,l.jsxs)(n.li,{children:["The field order is preserved. When doing an ",(0,l.jsx)(n.code,{children:"INSERT"})," you will have to supply values in the same order"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"empty or error"}),"\n",(0,l.jsxs)(n.li,{children:["when used with ",(0,l.jsx)(n.code,{children:"if not exists"}),": bool indicating whether the model was actually created or not (false indicates that it was already present and hence not created)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"examples-3",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"CREATE MODEL myspace.mymodel(username: string, password: string, null email_id: string, notes: list { type: string })\nCREATE MODEL IF NOT EXISTS myspace.mymodel(username: string, password: string, null email_id: string, notes: list { type: string })\n"})}),"\n",(0,l.jsx)(n.h3,{id:"alter-model-add",children:"ALTER MODEL ADD"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- add a single field\nALTER MODEL <space_name>.<model_name> ADD one_field { type: string }\n-- add multiple fields\nALTER MODEL <space_name>.<model_name> ADD (\n    first_field { type: string },\n    second_field { type: binary },\n)\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": ",(0,l.jsx)(n.code,{children:"root"})," only"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": empty or error"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"examples-4",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"ALTER MODEL myspace.mymodel ADD one_field { type: list { type: string } }\nALTER MODEL myspace.mymodel ADD (\n  email_id: {\n    type: string,\n    nullable: true,\n  },\n  phone_number: {\n    type: uint64,\n    nullable: true,\n  },\n)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"alter-model-update",children:"ALTER MODEL UPDATE"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Syntax"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- update one field\nALTER MODEL <space_name>.<model_name> UPDATE one_field { type: string }\n-- update multiple fields\nALTER MODEL <space_name>.<model_name> UPDATE (\n    first_field { type: string },\n    second_field { type: binary },\n)\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": ",(0,l.jsx)(n.code,{children:"root"})," only"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Operational notes"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The primary key field cannot be modified"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": empty or error"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"examples-5",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"ALTER MODEL myspace.mymodel UPDATE my_int_field { type: uint64 }\nALTER MODEL myspace.mymodel UPDATE (\n  my_int_field { type: uint64 },\n  my_float_field { type: float64 }\n)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"alter-model-remove",children:"ALTER MODEL REMOVE"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"-- remove one field\nALTER MODEL <space_name>.<model_name> REMOVE one_field\n-- remove multiple fields\nALTER MODEL <space_name>.<model_name> REMOVE (first_field, second_field, ...)\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": ",(0,l.jsx)(n.code,{children:"root"})," only"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Operational notes"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The primary key field cannot be removed (as is expected)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),": empty or error"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"examples-6",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"ALTER MODEL myspace.mymodel REMOVE useless_field\nALTER MODEL myspace.mymodel REMOVE (useless_field_1, useless_field2)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"drop-model",children:"DROP MODEL"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"DROP MODEL [IF EXISTS] [ALLOW NOT EMPTY] <space_name>.<model_name>\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Access control"}),": ",(0,l.jsx)(n.code,{children:"root"})," only"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Operational notes"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Non-empty models cannot be dropped"})," to avoid catastrophic drops"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"To drop a non-empty model"}),": you must run:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"DROP MODEL ALLOW NOT EMPTY <space_name>.<model_name>\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Returns"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"empty or error"}),"\n",(0,l.jsxs)(n.li,{children:["when used with ",(0,l.jsx)(n.code,{children:"if exists"}),": bool indicating whether the model was actually present or not"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"examples-7",children:"Examples"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sql",children:"DROP MODEL myspace.mymodel\nDROP ALLOW NOT EMPTY myspace.mymodel\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var l=s(6540);const r={},i=l.createContext(r);function d(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);